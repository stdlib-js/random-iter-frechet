// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-max@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-frechet@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var g=e,c=t,b=s,v=n,x=i,y=r,w=o.isPrimitive,P=m,L=d.isPrimitive,G=l,N=a.isPrimitive,R=u,T=p,E=h.factory,V=j,O=f;var F=function e(t,s,n,i){var r,o,m,d,l;if(!w(t))throw new TypeError(O("invalid argument. First argument must be a positive number. Value: `%s`.",t));if(!w(s))throw new TypeError(O("invalid argument. Second argument must be a positive number. Value: `%s`.",s));if(!L(n)||G(n))throw new TypeError(O("invalid argument. Third argument must be a number primitive. Value: `%s`.",n));if(arguments.length>3){if(!P(i))throw new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",i));if(r=y(i,1),R(r,"iter")){if(!N(r.iter))throw new TypeError(O("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","iter",r.iter))}else r.iter=T;m=E(t,s,n,r),void 0===r.prng&&!1!==r.copy&&(r.state=m.state)}else m=E(t,s,n),r={iter:T,state:m.state};return l=0,g(o={},"next",a),g(o,"return",u),r&&r.prng?(g(o,"seed",null),g(o,"seedLength",null),b(o,"state",v(null),x),g(o,"stateLength",null),g(o,"byteLength",null)):(c(o,"seed",h),c(o,"seedLength",j),b(o,"state",S,k),c(o,"stateLength",f),c(o,"byteLength",F)),g(o,"PRNG",m.PRNG),V&&g(o,V,p),o;function a(){return l+=1,d||l>r.iter?{done:!0}:{value:m(),done:!1}}function u(e){return d=!0,arguments.length?{value:e,done:!0}:{done:!0}}function p(){return e(t,s,n,r)}function h(){return m.PRNG.seed}function j(){return m.PRNG.seedLength}function f(){return m.PRNG.stateLength}function F(){return m.PRNG.byteLength}function S(){return m.PRNG.state}function k(e){m.PRNG.state=e}},S=F;export{S as default};
//# sourceMappingURL=index.mjs.map
